apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: backend
  namespace: searchpilot
  labels:
    app: backend
  annotations:
    argocd-image-updater.argoproj.io/image-list: backend=xxng/searchpilot-backend
    argocd-image-updater.argoproj.io/update-strategy: newest-build
spec:
  replicas: 3
  strategy:
    canary:
      canaryService: backend-canary
      stableService: backend-stable
      trafficRouting:
        nginx:
          stableIngress: searchpilot-ingress
          annotationPrefix: nginx.ingress.kubernetes.io
          additionalIngressAnnotations:
            nginx.ingress.kubernetes.io/canary: "true"
            nginx.ingress.kubernetes.io/canary-weight: "{{ .CanaryWeight }}"
      steps:
      - setWeight: 10
      - pause: {duration: 30s}
      - setWeight: 30
      - pause: {duration: 30s}
      - setWeight: 60
      - pause: {duration: 30s}
      - setWeight: 100
      analysis:
        templates:
        - templateName: backend-analysis
        args:
        - name: service-name
          value: backend-canary
        - name: canary-replicas
          value: "1"
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
      annotations:
        argocd-image-updater.argoproj.io/image-list: backend=xxng/searchpilot-backend
        argocd-image-updater.argoproj.io/update-strategy: newest-build
    spec:
      imagePullSecrets:
      - name: ghcr-secret
      containers:
      - name: backend
        image: xxng/searchpilot-backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          value: "mysql+asyncmy://searchuser:searchpass@mysql:3306/searchpilot"
        - name: CORS_ORIGINS
          value: "http://localhost:3000"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
      initContainers:
      - name: wait-for-mysql
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z mysql 3306; do echo waiting for mysql; sleep 2; done;']